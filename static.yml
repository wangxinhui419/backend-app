name: "Static analysis"

on:
  push:
    branches: [ "master","staging/0805" ]
  pull_request:
    branches:
      - "staging/**"
      - "master"

env:
  php-version: '8.0'

concurrency:
  group: Static analysis ${{ github.ref }}
  cancel-in-progress: true

jobs:
  codesniffer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install PHP_CodeSniffer
        run: |
          curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
          php phpcs.phar --version
      - uses: reviewdog/action-setup@v1

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35

      - name: Analyse all changed files
        run: |
          export REVIEWDOG_GITHUB_API_TOKEN="${{ secrets.github_token }}"
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file start check..."
            filename=$(basename -- "$file")
            extension="${filename##*.}"
            if [ $extension == 'php' ]; then
              php phpcs.phar --report=code $file --standard=phpcs.xml --extensions=php
            else
              echo "$file isn't php file , skip..."
            fi
          done

  psalm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup PHP ${{ env.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php-version }}
          ini-values: memory_limit=-1,zend.assertions=1,opcache.enable_cli=true,opcache.jit_buffer_size=512M,opcache.jit=1205
          extensions: redis,gd,pcntl,opcache
          tools: vimeo/psalm:5.2.0
          coverage: none
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache composer files
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ env.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ env.php-version }}-${{ hashFiles('**/composer.lock') }}
            ${{ runner.os }}-composer-${{ env.php-version }}
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader
          composer require maatwebsite/excel:^3.1
          composer remove graham-campbell/markdown

      - name: Install psalm plugin-laravel
        run: |
          composer global require -W psalm/plugin-laravel:v2.8.0

      - name: psalm plugin show
        run: |
          psalm-plugin show

      - name: Run psalm
        run: |
          psalm --show-info=always --no-cache --no-progress --root=${{ github.workspace }} --use-baseline=psalm-baseline.xml --config=psalm.xml

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Setup PHP ${{ env.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php-version }}
          extensions: redis
          tools: phpstan:1.8.11
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache composer files
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ env.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ env.php-version }}-${{ hashFiles('**/composer.lock') }}
            ${{ runner.os }}-composer-${{ env.php-version }}
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader
          composer require --dev nunomaduro/larastan:^1.0

      - name: Run phpstan
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:  |
          phpstan analyse --error-format=github --no-progress  --memory-limit=2G --debug

